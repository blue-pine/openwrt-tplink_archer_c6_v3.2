#!/bin/sh /etc/rc.common
# Copyright (c) 2013 The Linux Foundation. All rights reserved.
# Copyright (C) 2006-2011 OpenWrt.org

START=10
STOP=98

agile_config_faviconPath="/www/webpages/logo/"
agile_config_logoPath="/www/webpages/themes/green/img/"
agile_config_logoInterceptPath="/www/webpages/themes/green/img/"

system_config() {
	local cfg="$1"

	local hostname conloglevel timezone

	config_get hostname "$cfg" hostname 'OpenWrt'
	echo "$hostname" > /proc/sys/kernel/hostname

	config_get conloglevel "$cfg" conloglevel
	config_get buffersize "$cfg" buffersize
	[ -z "$conloglevel" -a -z "$buffersize" ] || dmesg ${conloglevel:+-n $conloglevel} ${buffersize:+-s $buffersize}

	config_get timezone "$cfg" timezone 'UTC'
	echo "$timezone" > /tmp/TZ

	config_get zonename "$cfg" zonename
	[ -n "$zonename" ] && [ -f "/usr/share/zoneinfo/$zonename" ] && ln -s "/usr/share/zoneinfo/$zonename" /tmp/localtime

	# apply timezone to kernel
	date -k

	# Start logd
	[ -x /etc/init.d/logd ] && /etc/init.d/logd start

	if [ -x /sbin/klogd ]; then
		config_get klogconloglevel "$cfg" klogconloglevel
		args="${klogconloglevel:+-c $klogconloglevel}"
		service_start /sbin/klogd $args
	fi
}

apply_uci_config() {
	sh -c '. /lib/functions.sh; include /lib/config; uci_apply_defaults'
}

set_coediton_fw() {
	special_id=$(getfirm SPECIAL_ID)
	model=$(getfirm MODEL | grep C6U)
	echo $special_id >/dev/console
	
	#diable v6plus,dslite,ndproxy in non-JP areas...
	if [ "A$special_id" != "A4A500000" ];then
		sed -i "s/v6plus_support: true/v6plus_support: false/g" /www/webpages/module/module*.js
		sed -i "s/v6plus_support:true/v6plus_support:false/g" /www/webpages/module/module*.js
		sed -i "s/dslite_support: true/dslite_support: false/g" /www/webpages/module/module*.js
		sed -i "s/dslite_support:true/dslite_support:false/g" /www/webpages/module/module*.js
		sed -i "s/ndProxy_support: true/ndProxy_support: false/g" /www/webpages/module/module*.js
		sed -i "s/ndProxy_support:true/ndProxy_support:false/g" /www/webpages/module/module*.js
	fi

	#This is only for C6v3/A6v3,not for C6U. AS C6U files are replaced during making firmware.
	if [ "A$special_id" = "A52550000" -a "A$model" = "A" ];then
		mv /www/webpages/pages/frame/quick-setup-ru-nomodem.*.html /www/webpages/pages/frame/quick-setup.*.html
                sed -i "s/iptv\./iptv_ru\./g" /www/webpages/pages/frame/advanced.*.html
	elif [ "A$special_id" != "A52550000" ];then
		sed -i -e "/yandex-dns/d" /etc/profile.d/profile
	fi

	if [ "A$special_id" = "A4B520000" ];then
		mv /www/webpages/pages/frame/quick-setup-kr.*.html /www/webpages/pages/frame/quick-setup.*.html
                sed -i "s/iptv\./iptv_kr\./g" /www/webpages/pages/frame/advanced.*.html
	else
		sed -i -e "/wol-frame/d" /etc/profile.d/profile
	fi

	#remove ru-only files. 
	#This is only for C6V3 RU,not for C6U RU. AS C6U RU files are replaced during making firmware.
        rm /www/webpages/pages/frame/quick-setup-ru*.html
        rm /www/webpages/pages/userrpm/iptv_ru.*.html

}

#agile config reload logo and favicon
agile_config_replace_logo() {
	echo "agile config reload favicon and logo start!"
	#get file path
	local faviconPath=`find $agile_config_faviconPath -name "favicon*.ico"`
	local logoPath=`find $agile_config_logoPath -name "logo*.png"`
	local logoInterceptPath=`find $agile_config_logoInterceptPath -name "https-blocking-logo*.png"`
	#get file name
	local faviconName=${faviconPath##*/}
	local logoName=${logoPath##*/}
	local logoName_intercept=${logoInterceptPath##*/}
	#read partition file
	nvrammanager -r /tmp/$faviconName -p favicon
	nvrammanager -r /tmp/$logoName -p logo

	#modify the config, agile config won't be set repeatedly
	if [ -s /tmp/$faviconName -o -s /tmp/$logoName ];then
		uci set factory.agileconfig.enable="no"
		uci commit
	fi
	
	#replace factory logo and favicon
	[ -s /tmp/$faviconName ] && mv /tmp/$faviconName $faviconPath
	[ -s /tmp/$logoName ] && cp /tmp/$logoName $logoPath
	[ -s /tmp/$logoName ] && mv /tmp/$logoName $logoInterceptPath
	[ -s $faviconPath ] && chmod 775 $faviconPath
	[ -s $logoPath ] && chmod 775 $logoPath
	[ -s $logoInterceptPath ] && chmod 775 $logoInterceptPath
	#delete unused file
	[ -f /tmp/$faviconName ] && rm -f /tmp/$faviconName
	[ -f /tmp/$logoName ] && rm -f /tmp/$logoName
	echo "agile config reload favicon and logo end!"
}

start() {
	[ -f /proc/mounts ] || /sbin/mount_root
	[ -f /proc/jffs2_bbc ] && echo "S" > /proc/jffs2_bbc
	[ -f /proc/net/vlan/config ] && vconfig set_name_type DEV_PLUS_VID_NO_PAD

	mkdir -p /var/run
	mkdir -p /var/log
	mkdir -p /var/lock
	mkdir -p /var/state
	mkdir -p /tmp/.uci
	chmod 0700 /tmp/.uci
	touch /var/log/wtmp
	touch /var/log/lastlog
	touch /tmp/resolv.conf.auto
	ln -sf /tmp/resolv.conf.auto /tmp/resolv.conf
	grep -q debugfs /proc/filesystems && mount -t debugfs debugfs /sys/kernel/debug
	[ "$FAILSAFE" = "true" ] && touch /tmp/.failsafe
	#[ -d  /storage ] && mount -t jffs2 mtd:storage /storage
	#[ -d  /data ] && mount -t jffs2 mtd:data /data
	/etc/tp_data.sh mount_tpdata

	load_modules "$(ls /etc/modules.d/* | grep -v -e 33-qca-wifi-* -e button-poll)"

	# allow wifi modules time to settle
	# sleep 1

	#[ "$(/sbin/is_cal)" = "true" ] || {
	#	/sbin/wifi default > /tmp/wireless.tmp
	#	[ -s /tmp/wireless.tmp ] && {
	#		cat /tmp/wireless.tmp >> /etc/config/wireless
	#	}
	#	rm -f /tmp/wireless.tmp
	#}
	/sbin/sound detect > /tmp/sound.tmp
	[ -s /tmp/sound.tmp ] && {
		cat /tmp/sound.tmp >> /etc/config/sound
	}
	rm -f /tmp/sound.tmp

	

	echo "-------------------------------------------------------------------------------------" >/dev/console
	loadprofile >/dev/console 2>&1
	echo "-------------------------------------------------------------------------------------" >/dev/console 2>&1

	## prepare tmp partition
	echo "-------------------------------------------------------------------------------------" >/dev/console
	#MTDDEV=$(grep rootfs_data /proc/mtd | cut -d ":" -f1)
	#mkdir /tmp/mnt >/dev/console 2>&1
	#mount -t jffs2 $MTDDEV /tmp/mnt >/dev/console 2>&1
	loadconfig >/dev/console 2>&1
	echo "-------------------------------------------------------------------------------------" >/dev/console 2>&1

	echo "-------------------------------------------------------------------------------------" >/dev/console
	[ -f /sbin/loadqosdatabase ] && loadqosdatabase >/dev/console 2>&1
	echo "-------------------------------------------------------------------------------------" >/dev/console 2>&1

	echo "-------------------------------------------------------------------------------------" >/dev/console
	[ -f /sbin/loadopenvpncert ] && loadopenvpncert >/dev/console 2>&1
	echo "-------------------------------------------------------------------------------------" >/dev/console 2>&1

	echo "-------------------------------------------------------------------------------------" >/dev/console
	[ -f /sbin/remodel_supplement ] && remodel_supplement >/dev/console 2>&1
	echo "-------------------------------------------------------------------------------------" >/dev/console 2>&1

	apply_uci_config
	config_load system
	config_foreach system_config system

	if [ "A$(uci get profile.@agile_config[0].support -c /etc/profile.d)" = "Ayes" ];then
		agile_config_replace_logo
	fi	
	
	set_coediton_fw
	
	/sbin/network_firm
	
	# ifconfig eth0 can create eth1 interface for mtk double Gmac design which let netifd can create eth1.1 vlan interface for ap mode
	ifconfig eth0 up
	killall -q hotplug2
	[ -x /sbin/hotplug2 ] && /sbin/hotplug2 --override --persistent \
			--set-rules-file /etc/hotplug2.rules \
			--set-coldplug-cmd /sbin/udevtrigger \
			--max-children 1 >/dev/null 2>&1 &

	# create /dev/root if it doesn't exist
	[ -e /dev/root -o -h /dev/root ] || {
		rootdev=$(awk 'BEGIN { RS=" "; FS="="; } $1 == "root" { print $2 }' < /proc/cmdline)
		[ -n "$rootdev" ] && ln -s "$rootdev" /dev/root
	}
}

stop() {
	service_stop /sbin/klogd
	[ -x /etc/init.d/logd ] && /etc/init.d/logd stop
}
