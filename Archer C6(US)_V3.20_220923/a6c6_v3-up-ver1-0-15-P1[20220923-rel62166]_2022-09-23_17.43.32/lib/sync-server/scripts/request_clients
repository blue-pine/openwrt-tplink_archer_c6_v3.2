#!/usr/bin/lua

local tmpv2 = require "tmpv2"
local json = require "luci.json"
local dbg = require "luci.tools.debug"
local uci  = require "luci.model.uci"
local script = require "sync-script"
local die = script.die
local finalize = script.finalize

local infile = arg[1]
local outfile = arg[2]
local opcode = arg[3]

script.outfile = outfile

local function request(tmpcli)
    local data, msg = tmpcli:request(opcode, {infile = infile})
    if not data then
        return nil, msg
    end

    local data = json.decode(data)

    return true, data
end

local function main()
    if tonumber(opcode) then
        opcode = tonumber(opcode)
    end
    assert(opcode and infile and outfile, "invalid arguments")
    assert(#arg > 3, "invalid arguments")

    -- local uci_r = uci.cursor()
    -- local usr = uci_r:get_profile("accountmgnt", "username")
    -- local pwd = uci_r:get_profile("accountmgnt", "password")     

    local data = script.reduce_concurrent(request, nil, nil, arg, 4, #arg)
    finalize(data)
end

script.run(main)
