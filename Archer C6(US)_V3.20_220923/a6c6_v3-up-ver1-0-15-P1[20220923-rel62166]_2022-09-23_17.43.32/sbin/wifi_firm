#!/bin/sh
#
# Copyright (c) 2019 TP-LINK Technologies Co., Ltd.
# All Rights Reserved.

. /lib/functions.sh

WIFIDEVICES=

country=
if [ $(getfirm SPECIAL_ID) = "4B520000" ];then
	country="KR"
fi
DEFAULT_MAC="C0-4A-00-0A-A4-14"

factory_random_mac_wlan(){
	echo "============factory_random_mac_wlan============" > /dev/console
	local factory=$(uci get factory.factorymode.enable)
	echo "Afactory:A$factory" > /dev/console

	if [ "A$factory" = "Ayes" ];then
		local suffix=$(getfirm DEV_ID |cut -c35-)       
		echo "wlan random mac suffix:$suffix" >/dev/console

		if [ ${#suffix} -ge 6 ];then
			local suffix_1=$(echo $suffix|cut -c1-2)
			local suffix_2=$(echo $suffix|cut -c3-4)
			local suffix_3=$(echo $suffix|cut -c5-6)
			mac_random="C0-4A-00-$suffix_1-$suffix_2-$suffix_3"
			echo "wlan random mac value:$mac_random" >/dev/console                
			echo $mac_random
		else
			echo "wlan random suffix len:${#suffix}" >/dev/console
			echo "$DEFAULT_MAC"
		fi
	else
		echo "$DEFAULT_MAC" 
	fi
}

wifi_firm_info() {
	local change_flag=""
	local mac=""
	local pin=""
	local ssid=""

	for dev in ${WIFIDEVICES}; do
		local band=""
		[ "$dev" = "wifi0" ] && band=2g || band=5g
		# Set MAC address first to make sure wireless mac is correct
		cfgMac="$(config_get $dev macaddr)"
		mac="$(getfirm MAC)"
		
		if [ $mac = $DEFAULT_MAC ];then
			mac=$(factory_random_mac_wlan)
			echo "mac:$mac" >/dev/console
		fi

		[ "$band" = "5g" ] && mac=`mac_addr 2 $mac`
		mac="$(echo $mac | tr 'a-f' 'A-F')"
		[ -z "$cfgMac" -o "$mac" != "$cfgMac" ] && {
			uci set wireless.${dev}.macaddr=$mac
			change_flag="1"
		}

		[ -n "$(config_get $dev band)" ] && continue

		# Set band and hwmode.
		[ "$band" = "2g" ] && {
			uci set wireless.${dev}.band="$band"
			uci set wireless.${dev}.hwmode=bgn
			change_flag="1"
		}
		[ "$band" = "5g" ] && {
			uci set wireless.${dev}.band="$band"
			uci set wireless.${dev}.hwmode=anac_5
			change_flag="1"
		}


		config_get vifs $dev vifs
		for vif in $vifs; do
			local mode guest
			config_get mode $vif mode ap
			config_get guest $vif guest off
			[ "$mode" != "ap" ] && continue

			[ -z "$ssid" ] && ssid="$(getfirm SSID)"

			local suffix
			suffix=$(getfirm MAC | cut -d "-" -f 5,6 | sed 's/-//g' | tr 'a-f' 'A-F')
			[ "$band" = "5g" ] && suffix="${suffix}_${band//g/G}"

			if [ "$guest" = "off" ]; then
				[ -z "$(config_get $vif wps_pin)" ] && {
					[ -z "$wps_pin" ] && wps_pin="$(getfirm PIN)"
					if [ "$country" = "KR" ]; then
						uci set wireless.${vif}.encryption="none"
					else
						uci set wireless.${vif}.encryption="psk"
					fi
					uci set wireless.${vif}.psk_key=${wps_pin}
					uci set wireless.${vif}.wps_pin=${wps_pin}
					uci set wireless.${vif}.wps_state=2
				}
				uci set wireless.${vif}.ssid="${ssid}_${suffix}"
				change_flag="1"
			else
				[ -z "$wps_pin" ] && wps_pin="$(getfirm PIN)"
				uci set wireless.${vif}.psk_key=${wps_pin}
				uci set wireless.${vif}.encryption="none"
				uci set wireless.${vif}.ssid="${ssid}_Guest_${suffix}"
				change_flag="1"
			fi
		done
	done

	if [ -z "$(config_get wps model_name)" ]; then
		local model="$(getfirm MODEL)"
		uci set wireless.wps.model_name="${model}"
		change_flag="1"
	fi
	if [ -z "$(config_get wps wps_manufacturer)" -o -z "$(config_get wps wps_manufacturer_url)" ]; then
		local firm="$(getfirm FIRM)"
		local website="$(getfirm WEBSITE)"
		uci set wireless.wps.wps_manufacturer=${firm}
		uci set wireless.wps.wps_manufacturer_url=${website}
		change_flag="1"
	fi

	[ "$change_flag" = "1" ] && wifi_commit
}

config_cb() {
	local type="$1"
	local section="$2"

	case "$type" in
		wifi-device)
			append WIFIDEVICES "$section"
			config_set "$section" vifs ""
		;;
	esac

	config_get TYPE "$CONFIG_SECTION" TYPE
	case "$TYPE" in
		wifi-iface)
			config_get device "$CONFIG_SECTION" device
			config_get vifs "$device" vifs 
			append vifs "$CONFIG_SECTION"
			config_set "$device" vifs "$vifs"
		;;
	esac
}

config_load wireless
wifi_firm_info
