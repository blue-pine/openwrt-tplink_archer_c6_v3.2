#!/usr/bin/lua

--syslog define
local PROJ_LOG_ID_CLOUD=298
--MSG(CLOUD_DOWNLOAD_SUCCESS, 52, INF, "download firmware success")
local CLOUD_DOWNLOAD_SUCCESS=52
--MSG(CLOUD_DOWNLOAD_FAIL, 202, ERR, "download firmware fail")
local CLOUD_DOWNLOAD_FAIL=202

local dbg 	= require "luci.tools.debug"
local nixio = require "nixio"
local logm  = require "luci.model.log"
local log   = logm.Log(PROJ_LOG_ID_CLOUD)

--check whether the download process is exist or not.
function get_download_status(dlpid)
	local pid
	local fp
	
	if nixio.fs.access(dlpid) then
		fp = io.open(dlpid, "r")
		pid = fp:read("*line")
		fp:close()
		-- the cloud_download have create download pid, but have not write pid to it.
		if pid == nil then
			--dbg.print("###file is null, waiting...")
			return true
		end
		if nixio.fs.access("/proc/%s/status" % {pid}) then
			return true
		else
			return false
		end
	end
	-- the user have click the up, but cloud_download not ready.
	if nixio.fs.access("/tmp/tether_up") then
		--dbg.print("###file does not exist, waiting...")
		return true
	end
	return false
end

function get_download_progress(filename, dllenfile)
	local filesize = 0
	local totalsize = 0
	local percent = 0
	local fp

	if nixio.fs.access(dllenfile) then
		fp = io.open(dllenfile, "r")
		totalsize = fp:read("*line")
		fp:close()
		if nixio.fs.access(filename) then
			filesize = nixio.fs.stat(filename).size
			percent = math.floor((filesize * 100) / totalsize);
		end
	end
	
	return percent
end

--download file
local CLOUD_DL_PATH = arg[1]
local CLOUD_DL_PID = arg[2]
local CLOUD_DL_LENGTH = arg[3]
if not CLOUD_DL_PATH or not CLOUD_DL_PID or not CLOUD_DL_LENGTH then
	os.exit(0)
end

local status = true
local percent = 0
while true do
	local status = get_download_status(CLOUD_DL_PID)
	local percent = get_download_progress(CLOUD_DL_PATH, CLOUD_DL_LENGTH)
	if status == false and tonumber(percent) < 100 then
		log(CLOUD_DOWNLOAD_FAIL)
		-- Remove flag, accept next try.
		os.execute("rm -f /tmp/firmware_lock.lua")
		break
	elseif tonumber(percent) >= 100 then
		log(CLOUD_DOWNLOAD_SUCCESS)
		break
	end

	nixio.nanosleep(1)
end

os.exit(0)
